@import './imports/variables';

// Main classes
@for $i from 1 through $grid-columns {
    .g--#{$i} {
        width: 100%/$grid-columns*$i;
        margin-top: $space-big;
        margin-bottom: $space-big;
    }
    .m--#{$i} {
        margin-left: 100%/$grid-columns*$i;
    }
}

// Media queries margin classes - Using while we invert the ordering
// which was problematic
$j: $grid-columns;
@while $j > 0 {
    @media screen and (max-width: $media-med) {
        .m-m--#{$j} {
            margin-left: 100%/$grid-columns*$j;
        }
    }
    @media screen and (max-width: $media-small) {
        .m-s--#{$j} {
            margin-left: 100%/$grid-columns*$j;

        }
    }
    @media screen and (max-width: $media-tiny) {
        .m-t--#{$j} {
            margin-left: 100%/$grid-columns*$j;
        }
    }
    $j: $j - 1;
}

// Media queries width classes
@for $k from 1 through $grid-columns {
    @media screen and (max-width: $media-med) {
        .g-m--#{$k} {
            width: 100%/$grid-columns*$k;
            margin-top: $space-med*1.3;
            margin-bottom: $space-med*1.3;
        }
    }
    @media screen and (max-width: $media-small) {
        .g-s--#{$k} {
            width: 100%/$grid-columns*$k;
            margin-top: $space-med*0.9;
            margin-bottom: $space-med*0.9;
        }
    }
    @media screen and (max-width: $media-tiny) {
        .g-t--#{$k} {
            width: 100%/$grid-columns*$k;
            margin-top: $space-small;
            margin-bottom: $space-small;
        }
    }
}

@media screen and (max-width: $media-med) {
	.m-m--0 {
		margin-left: 0;
	}
}

@media screen and (max-width: $media-small) {
	.m-s--0 {
		margin-left: 0;
	}
}

@media screen and (max-width: $media-tiny) {
	.m-t--0 {
		margin-left: 0;
	}
}

[class*="container"] {
	display: flex;
}

.container--baseline {
	align-items: baseline;
}

.container--center {
	align-items: center;
}

.container--start {
	align-items: flex-start;
}

.container--end {
	align-items: flex-end;
}

.container--justify {
	justify-content: center;
}

.container--wrap {
	flex-wrap: wrap;
}

.container--wrap--m {
	@media screen and (max-width: $media-med) {
		flex-wrap: wrap;
	}
}

.container--wrap--s {
	@media screen and (max-width: $media-small) {
		flex-wrap: wrap;
	}
}

.container--wrap--t {
	@media screen and (max-width: $media-tiny) {
		flex-wrap: wrap;
	}
}

.nudge--right {
	margin-right: $space-med;
	@media screen and (max-width: $media-small) {
		margin-right: $space-med*0.75;
	}
	@media screen and (max-width: $media-tiny) {
		margin-right: $space-small;
	}
}

.nudge--left {
	margin-left: $space-med;
	@media screen and (max-width: $media-small) {
		margin-left: $space-med*0.75;
	}
	@media screen and (max-width: $media-tiny) {
		margin-left: $space-small;
	}
}

.no-nudge--m {
	@media screen and (max-width: $media-med) {
		margin-left: 0;
		margin-right: 0;
	}
}

.no-nudge--s {
	@media screen and (max-width: $media-small) {
		margin-left: 0;
		margin-right: 0;
	}
}

.no-nudge--t {
	@media screen and (max-width: $media-tiny) {
		margin-left: 0;
		margin-right: 0;
	}
}
